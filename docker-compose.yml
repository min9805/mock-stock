services:
  mysql:
    image: mysql:8.0.33
    ports:
      - 13306:3306
    volumes:
      - ${DB_INIT_DIR}/create_schema.sql:/docker-entrypoint-initdb.d/init.sql
    command:
      - '--character-set-server=utf8mb4'
      - '--collation-server=utf8mb4_unicode_ci'
      - '--lower_case_table_names=1'
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: stock

  mongodb:
    image: mongo:latest
    ports:
      - 27018:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin_password
      MONGO_INITDB_DATABASE: stock
    volumes:
      - mongodb_data:/data/db
      - ${DB_INIT_DIR}/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    command: mongod --auth

  # MongoDB 관리 도구 (옵션)
  mongo-express:
    image: mongo-express:latest
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin_password
      ME_CONFIG_MONGODB_URL: mongodb://admin:admin_password@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: pass
    depends_on:
      - mongodb

  redis:
    image: redis:latest
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    environment:
      - REDIS_PASSWORD=redis_password
    restart: always

volumes:
  mongodb_data:
  redis_data: